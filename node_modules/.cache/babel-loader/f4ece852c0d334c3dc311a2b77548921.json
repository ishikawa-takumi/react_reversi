{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/takumi/work/react/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: showMark(props.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(x, y, nextPlayer) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[y][x],\n      onClick: () => {\n        this.props.onClick(x, y);\n      }\n    }, x + y * TABLE_SIZE, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const tableSquare = [...Array(8).keys()].map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [...Array(8).keys()].map(col => this.renderSquare(col, row, this.props.currentPlayer))\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tableSquare\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst TABLE_SIZE = 8;\nconst WHITE_MARK_ID = 1;\nconst BLACK_MARK_ID = 2;\nconst INIT_TABLE = [[null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [null, null, null, 1, 2, null, null, null], [null, null, null, 2, 1, null, null, null], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null], [null, null, null, null, null, null, null, null]];\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: INIT_TABLE,\n        player: BLACK_MARK_ID\n      }],\n      stepNumber: 0,\n      currentPlayer: BLACK_MARK_ID\n    };\n  }\n\n  getFlippableList(squares, x, y, playerId) {\n    const REV = -1;\n    const CURRENT = 0;\n    const NEXT = 1;\n    const DIRECTIONS = [REV, CURRENT, NEXT];\n    let flippableList = [];\n    DIRECTIONS.forEach(dy => {\n      DIRECTIONS.forEach(dx => {\n        if (dx === CURRENT && dy === CURRENT) {\n          return;\n        }\n\n        let tmp = [];\n        let depth = 0;\n\n        while (true) {\n          depth += 1;\n          const rx = x + dx * depth;\n          const ry = y + dy * depth;\n\n          if (rx < 0 || TABLE_SIZE <= rx || ry < 0 || TABLE_SIZE <= ry) {\n            break;\n          }\n\n          let value = squares[ry][rx];\n\n          if (value === null) {\n            break;\n          }\n\n          if (value === playerId) {\n            if (tmp.length !== 0) {\n              flippableList = flippableList.concat(tmp);\n            }\n\n            break;\n          } else {\n            tmp.push([rx, ry]);\n          }\n        }\n      });\n    });\n    return flippableList;\n  }\n\n  handleClick(x, y) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = this.state.history[history.length - 1];\n    const squares = current.squares.map(square => {\n      return square.slice();\n    });\n    const currentPlayer = current.player;\n\n    if (squares[y][x]) {\n      return;\n    }\n\n    const flippableList = this.getFlippableList(squares, x, y, currentPlayer);\n\n    if (flippableList.length === 0) {\n      return;\n    }\n\n    squares[y][x] = currentPlayer;\n    flippableList.forEach(position => {\n      squares[position[1]][position[0]] = currentPlayer;\n    });\n    const nextPlayer = this.getNextPlayer(squares, currentPlayer);\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        player: nextPlayer\n      }]),\n      stepNumber: history.length\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step\n    });\n  }\n\n  goBack() {\n    this.setState({\n      stepNumber: this.state.stepNumber - 1\n    });\n  }\n\n  goForward() {\n    this.setState({\n      stepNumber: this.state.history.length > this.state.stepNumber ? this.state.stepNumber + 1 : this.state.stepNumber\n    });\n  }\n\n  getPoint(squares, playerId) {\n    let count = 0;\n\n    for (let y = 0; y < TABLE_SIZE; y++) {\n      for (let x = 0; x < TABLE_SIZE; x++) {\n        if (squares[y][x] === playerId) {\n          count += 1;\n        }\n      }\n    }\n\n    return count;\n  }\n\n  showPlayerPoints(squares) {\n    const firstPlayer = this.getPoint(squares, BLACK_MARK_ID);\n    const secondPlayer = this.getPoint(squares, WHITE_MARK_ID);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [showMark(BLACK_MARK_ID), \":\", firstPlayer, \" \", showMark(WHITE_MARK_ID), \":\", secondPlayer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  }\n\n  getNextPlayer(squares, currentPlayer) {\n    let count = 0;\n    let nextPlayer = currentPlayer === BLACK_MARK_ID ? WHITE_MARK_ID : BLACK_MARK_ID;\n\n    for (let y = 0; y < TABLE_SIZE; y++) {\n      for (let x = 0; x < TABLE_SIZE; x++) {\n        if (squares[y][x] === null) {\n          let flippableList = this.getFlippableList(squares, x, y, nextPlayer);\n          count += flippableList.length;\n        }\n      }\n    }\n\n    if (count === 0) {\n      nextPlayer = nextPlayer === BLACK_MARK_ID ? WHITE_MARK_ID : BLACK_MARK_ID;\n    }\n\n    return nextPlayer;\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    console.log(\"üöÄ ~ file: index.js ~ line 196 ~ Game ~ render ~ current\", this.state.stepNumber);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'go to move #' + move : 'go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          className: \"move-list\",\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this);\n    });\n\n    const step = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onLick: this.goBack,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"\",\n            className: \"step-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onLick: this.goForward,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"\",\n            className: \"step-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this);\n    };\n\n    let status;\n    status = 'next player: ' + showMark(current.player);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: (x, y) => {\n            this.handleClick(x, y);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.showPlayerPoints(current.squares)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), step]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 259,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction showMark(markId) {\n  if (markId === BLACK_MARK_ID) return '‚óã';else if (markId === WHITE_MARK_ID) return '‚óè';else return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/takumi/work/react/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","showMark","value","Board","Component","renderSquare","x","y","nextPlayer","squares","TABLE_SIZE","render","tableSquare","Array","keys","map","row","col","currentPlayer","WHITE_MARK_ID","BLACK_MARK_ID","INIT_TABLE","Game","constructor","state","history","player","stepNumber","getFlippableList","playerId","REV","CURRENT","NEXT","DIRECTIONS","flippableList","forEach","dy","dx","tmp","depth","rx","ry","length","concat","push","handleClick","slice","current","square","position","getNextPlayer","setState","jumpTo","step","goBack","goForward","getPoint","count","showPlayerPoints","firstPlayer","secondPlayer","console","log","moves","move","desc","status","document","getElementById","markId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {showMark(props.value)}\n    </button>\n  );\n}\n  \nclass Board extends React.Component {\n  renderSquare(x,y,nextPlayer) {\n    return (\n      <Square \n        value={this.props.squares[y][x]} \n        key={x+y*TABLE_SIZE}\n        onClick={()=>{\n          this.props.onClick(x,y);\n\n         }}\n        />\n    );\n  }\n\n  render() {\n    const tableSquare = ([...Array(8).keys()]).map(row => (\n      <div className=\"board-row\" key={row}>\n        {[...Array(8).keys()].map(col => this.renderSquare(col, row, this.props.currentPlayer))}\n      </div>\n    ));\n    return (\n      <div>\n        {tableSquare}\n      </div>\n    );\n  }\n}\n\nconst TABLE_SIZE = 8;\nconst WHITE_MARK_ID = 1;\nconst BLACK_MARK_ID = 2;\nconst INIT_TABLE = \n[ \n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null,    1,    2, null, null, null],\n  [null, null, null,    2,    1, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n  [null, null, null, null, null, null, null, null],\n];\n\nclass Game extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      history: [{\n        squares: INIT_TABLE,\n        player: BLACK_MARK_ID\n      }],\n      stepNumber: 0,\n      currentPlayer: BLACK_MARK_ID\n    };\n  }\n\n  getFlippableList(squares, x, y, playerId) {\n    const REV = -1;\n    const CURRENT = 0;\n    const NEXT = 1;\n    const DIRECTIONS = [REV, CURRENT, NEXT];\n    let flippableList = [];\n    \n    DIRECTIONS.forEach((dy) => {\n      DIRECTIONS.forEach((dx) => {\n        \n        if( dx === CURRENT && dy === CURRENT ) {\n          return;\n        }\n        let tmp = [];\n        let depth = 0;\n        \n        while( true ) { \n          depth += 1;\n\n          const rx = x + dx*depth;\n          const ry = y + dy*depth;\n          if( rx < 0 || TABLE_SIZE <= rx || ry < 0 || TABLE_SIZE <= ry ) {\n            break;\n          }\n          let value = squares[ry][rx];\n\n          if( value === null ) {\n            break;\n          }\n\n          if( value === playerId ) {\n            if( tmp.length !== 0 ) {\n              flippableList = flippableList.concat(tmp);\n            }\n            break;\n          }\n          else {\n            tmp.push([rx, ry]);\n          }\n        }\n      });\n    });\n    return flippableList;\n  }\n\n  handleClick(x, y) {\n    const history = this.state.history.slice(0, this.state.stepNumber+1);\n    const current = this.state.history[history.length-1];\n    const squares = current.squares.map((square) => {\n      return square.slice();\n    });\n    const currentPlayer = current.player;\n    if( squares[y][x] ) {\n      return;\n    }\n\n    const flippableList = this.getFlippableList(squares, x, y, currentPlayer);\n\n    if( flippableList.length === 0 ) {\n      return;\n    }\n\n    squares[y][x] = currentPlayer;\n    flippableList.forEach((position) => {\n      squares[position[1]][position[0]] = currentPlayer;\n    });\n\n    const nextPlayer = this.getNextPlayer(squares, currentPlayer);\n    \n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        player: nextPlayer\n      }]),\n      stepNumber: history.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n    });\n  }\n\n  goBack() {\n    this.setState({\n      stepNumber: this.state.stepNumber - 1\n    });\n  }\n\n  goForward() {\n    this.setState({\n      stepNumber: this.state.history.length > this.state.stepNumber ? this.state.stepNumber+1 : this.state.stepNumber\n    });\n  }\n\n  getPoint(squares, playerId) {\n    let count = 0;\n    for(let y=0; y<TABLE_SIZE; y++) {        \n      for(let x=0; x<TABLE_SIZE; x++) {        \n        if( squares[y][x] === playerId ) {\n          count += 1;\n        }\n      }\n    }\n    return count;\n  }\n\n  showPlayerPoints(squares) {\n    const firstPlayer = this.getPoint(squares, BLACK_MARK_ID);\n    const secondPlayer = this.getPoint(squares, WHITE_MARK_ID);\n\n    return(\n      <div>{showMark(BLACK_MARK_ID)}:{firstPlayer} {showMark(WHITE_MARK_ID)}:{secondPlayer}</div>\n    )\n  }\n\n  getNextPlayer(squares, currentPlayer) {\n    let count = 0;\n    let nextPlayer = (currentPlayer===BLACK_MARK_ID ? WHITE_MARK_ID : BLACK_MARK_ID);\n\n    for(let y=0; y<TABLE_SIZE; y++) {\n      for(let x=0; x<TABLE_SIZE; x++) {\n        if( squares[y][x] === null ) {\n          let flippableList = this.getFlippableList(squares, x, y, nextPlayer);\n          count += flippableList.length;\n        }\n      }\n    }\n    \n    if(count === 0) {\n      nextPlayer = (nextPlayer===BLACK_MARK_ID ? WHITE_MARK_ID : BLACK_MARK_ID);\n    }\n    return nextPlayer;\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    console.log(\"üöÄ ~ file: index.js ~ line 196 ~ Game ~ render ~ current\", this.state.stepNumber);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n      'go to move #' + move :\n      'go to game start';\n      return (\n        <li key={move}>\n          <button onClick={()=>this.jumpTo(move)} className=\"move-list\">{desc}</button>\n        </li>\n      );\n    });\n\n    const step = () => {        \n      return (\n        <div>\n          <button onLick={this.goBack}><img src=\"\" className=\"step-button\"/></button>\n          <button onLick={this.goForward}><img src=\"\" className=\"step-button\"/></button>\n        </div>\n      )\n    };\n\n    let status;\n    status = 'next player: ' + showMark(current.player);\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            onClick={(x,y)=>{\n              this.handleClick(x,y);\n              }}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <div>{this.showPlayerPoints(current.squares)}</div>\n          {/* <ol>{moves}</ol> */}\n          {step}\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction showMark( markId ) {\n  if(markId === BLACK_MARK_ID)\n    return '‚óã';\n  else if (markId === WHITE_MARK_ID)\n    return '‚óè';\n  else \n    return null\n}"]},"metadata":{},"sourceType":"module"}