{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/takumi/work/react/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: showMark(props.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => {\n        this.props.onClick(i);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const tableSquare = [...Array(8).keys()].map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [...Array(8).keys()].map(col => this.renderSquare(col + row * this.props.cols))\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tableSquare\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst TABLE_ROWS = 8;\nconst TABLE_COLS = 8;\nconst WHITE_MARK_ID = 1;\nconst BLACK_MARK_ID = 2;\nconst INIT_TABLE = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1, 2, null, null, null, null, null, null, 2, 1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: INIT_TABLE\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  getFlippableList(i, player_id) {\n    const REV = -1;\n    const CURRENT = 0;\n    const NEXT = 1;\n    const DIRECTIONS = [REV, CURRENT, NEXT];\n    DIRECTIONS.forEach(direction => {});\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = this.state.history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (squares[i]) {\n      return;\n    }\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? WHITE_MARK_ID : BLACK_MARK_ID;\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'go to move #' + move : 'go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          className: \"move-list\",\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'winner: ' + winner;\n    } else {\n      const nextplayer = this.props.xIsNext ? showMark(BLACK_MARK_ID) : showMark(WHITE_MARK_ID);\n      status = 'next player: ' + nextplayer;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          rows: TABLE_COLS,\n          cols: TABLE_ROWS,\n          onClick: i => {\n            this.handleClick(i);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 158,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nfunction showMark(markId) {\n  if (markId === BLACK_MARK_ID) return '○';else if (markId === WHITE_MARK_ID) return '●';else return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/takumi/work/react/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","showMark","value","Board","Component","renderSquare","i","squares","render","tableSquare","Array","keys","map","row","col","cols","TABLE_ROWS","TABLE_COLS","WHITE_MARK_ID","BLACK_MARK_ID","INIT_TABLE","Game","constructor","state","history","stepNumber","xIsNext","getFlippableList","player_id","REV","CURRENT","NEXT","DIRECTIONS","forEach","direction","handleClick","slice","current","length","calculateWinner","setState","concat","jumpTo","step","winner","moves","move","desc","status","nextplayer","document","getElementById","lines","a","b","c","markId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {showMark(props.value)}\n    </button>\n  );\n}\n  \nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square \n        value={this.props.squares[i]} \n         onClick={()=>{\n           this.props.onClick(i);\n\n         }}\n        />\n    );\n  }\n\n  render() {\n    const tableSquare = ([...Array(8).keys()]).map(row => (\n      <div className=\"board-row\" key={row}>\n        {[...Array(8).keys()].map(col => this.renderSquare(col + row * this.props.cols))}\n      </div>\n    ));\n    return (\n      <div>\n        {tableSquare}\n      </div>\n    );\n  }\n}\n\nconst TABLE_ROWS = 8;\nconst TABLE_COLS = 8;\nconst WHITE_MARK_ID = 1;\nconst BLACK_MARK_ID = 2;\nconst INIT_TABLE = \n[ \n  null, null, null, null, null, null, null, null,\n  null, null, null, null, null, null, null, null,\n  null, null, null, null, null, null, null, null,\n  null, null, null,    1,    2, null, null, null,\n  null, null, null,    2,    1, null, null, null,\n  null, null, null, null, null, null, null, null,\n  null, null, null, null, null, null, null, null,\n  null, null, null, null, null, null, null, null,\n];\n\nclass Game extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      history: [{\n        squares: INIT_TABLE\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  getFlippableList(i, player_id) {\n    const REV = -1;\n    const CURRENT = 0;\n    const NEXT = 1;\n    const DIRECTIONS = [REV, CURRENT, NEXT];\n    \n    DIRECTIONS.forEach((direction) => {\n      \n    });\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber+1);\n    const current = this.state.history[history.length-1];\n    const squares = current.squares.slice();\n    if( squares[i] ) {\n      return;\n    }\n\n    if( calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? WHITE_MARK_ID : BLACK_MARK_ID;\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n      'go to move #' + move :\n      'go to game start';\n      return (\n        <li key={move}>\n          <button onClick={()=>this.jumpTo(move)} className=\"move-list\">{desc}</button>\n        </li>\n      );\n    });\n    let status;\n    if( winner ) {\n      status = 'winner: ' + winner;\n    }\n    else {\n      const nextplayer = (this.props.xIsNext ? showMark(BLACK_MARK_ID): showMark(WHITE_MARK_ID));\n      status = 'next player: ' + nextplayer;\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            rows={TABLE_COLS}\n            cols={TABLE_ROWS}\n            onClick={(i)=>{\n              this.handleClick(i);\n              }}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  for( let i=0; i<lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if( squares[a] && squares[a] === squares[b] && squares[a] === squares[c] ) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nfunction showMark( markId ) {\n  if(markId === BLACK_MARK_ID)\n    return '○';\n  else if (markId === WHITE_MARK_ID)\n    return '●';\n  else \n    return null\n}"]},"metadata":{},"sourceType":"module"}